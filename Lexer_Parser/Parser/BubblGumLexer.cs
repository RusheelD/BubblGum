//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from ./Lexer_Parser/Parser/BubblGum.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.CLSCompliant(false)]
public partial class BubblGumLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		THIS=1, SWEETS=2, RECIPE=3, CANDY=4, GUM=5, FLAVOR=6, FLAVORS=7, SUGAR=8, 
		CARB=9, CAL=10, KCAL=11, YUM=12, BOLD=13, SUBTLE=14, BLAND=15, POP=16, 
		SIZE=17, EMPTY=18, INPUT=19, PURE=20, STICKY=21, PACK=22, SUGARPACK=23, 
		CARBPACK=24, CALPACK=25, KCALPACK=26, YUMPACK=27, YUP=28, NOPE=29, AND=30, 
		OR=31, XOR=32, XNOR=33, FLAVORLESS=34, IF=35, ELSE=36, ELIF=37, WHILE=38, 
		REPEAT_UP=39, REPEAT_DOWN=40, POPSTREAM=41, NOT=42, IN=43, IS=44, ASSIGN=45, 
		LEFT_PAREN=46, RIGHT_PAREN=47, LEFT_SQUARE_BRACKET=48, RIGHT_SQUARE_BRACKET=49, 
		LEFT_CURLY_BRACKET=50, RIGHT_CURLY_BRACKET=51, LEFT_ANGLE_BRACKET=52, 
		RIGHT_ANGLE_BRACKET=53, COMMA=54, SEMICOLON=55, COLON=56, ELIPSES=57, 
		DOT=58, PRINT=59, DEBUG=60, DOUBLE_QUOTE=61, SINGLE_QUOTE=62, BACK_TICK=63, 
		IMMUTABLE=64, GT_EQ=65, LT_EQ=66, LEFT_SHIFT=67, RIGHT_SHIFT=68, NOT_EQ_1=69, 
		NOT_EQ_2=70, PLUS_PLUS=71, MINUS_MINUS=72, PLUS_COLON=73, MINUS_COLON=74, 
		THIN_ARROW=75, THICK_ARROW=76, SUBCLASS_OF=77, EQUALS=78, AND_OP=79, OR_OP=80, 
		NOT_OP=81, XOR_OP=82, PLUS=83, MINUS=84, POWER=85, MULTIPLY=86, DIVIDE=87, 
		MODULO=88, IDENTIFIER=89, LETTER=90, INTEGER_LITERAL=91, STRING_LITERAL=92, 
		CHAR_LITERAL=93, ESCAPE_SEQUENCE=94, WHITE=95, EOL=96, SINGLE_LINE_COMMENT=97, 
		MULTI_LINE_COMMENT=98;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"THIS", "SWEETS", "RECIPE", "CANDY", "GUM", "FLAVOR", "FLAVORS", "SUGAR", 
		"CARB", "CAL", "KCAL", "YUM", "BOLD", "SUBTLE", "BLAND", "POP", "SIZE", 
		"EMPTY", "INPUT", "PURE", "STICKY", "PACK", "SUGARPACK", "CARBPACK", "CALPACK", 
		"KCALPACK", "YUMPACK", "YUP", "NOPE", "AND", "OR", "XOR", "XNOR", "FLAVORLESS", 
		"IF", "ELSE", "ELIF", "WHILE", "REPEAT_UP", "REPEAT_DOWN", "POPSTREAM", 
		"NOT", "IN", "IS", "ASSIGN", "LEFT_PAREN", "RIGHT_PAREN", "LEFT_SQUARE_BRACKET", 
		"RIGHT_SQUARE_BRACKET", "LEFT_CURLY_BRACKET", "RIGHT_CURLY_BRACKET", "LEFT_ANGLE_BRACKET", 
		"RIGHT_ANGLE_BRACKET", "COMMA", "SEMICOLON", "COLON", "ELIPSES", "DOT", 
		"PRINT", "DEBUG", "DOUBLE_QUOTE", "SINGLE_QUOTE", "BACK_TICK", "IMMUTABLE", 
		"GT_EQ", "LT_EQ", "LEFT_SHIFT", "RIGHT_SHIFT", "NOT_EQ_1", "NOT_EQ_2", 
		"PLUS_PLUS", "MINUS_MINUS", "PLUS_COLON", "MINUS_COLON", "THIN_ARROW", 
		"THICK_ARROW", "SUBCLASS_OF", "EQUALS", "AND_OP", "OR_OP", "NOT_OP", "XOR_OP", 
		"PLUS", "MINUS", "POWER", "MULTIPLY", "DIVIDE", "MODULO", "IDENTIFIER", 
		"LETTER", "INTEGER_LITERAL", "STRING_LITERAL", "CHAR_LITERAL", "ESCAPE_SEQUENCE", 
		"WHITE", "EOL", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT"
	};


	public BubblGumLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public BubblGumLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'gum'", "'sweets'", "'recipe'", "'candy'", "'Gum'", "'flavor'", 
		"'flavors'", "'sugar'", "'carb'", "'cal'", "'kcal'", "'yum'", "'bold'", 
		"'subtle'", "'bland'", "'pop'", "'size'", "'empty'", "'input'", "'pure'", 
		"'sticky'", "'pack'", "'sugarpack'", "'carbpack'", "'calpack'", "'kcalpack'", 
		"'yumpack'", "'yup'", "'nope'", "'and'", "'or'", "'xor'", "'xnor'", null, 
		"'if'", "'else'", "'elif'", "'while'", "'repeatUp'", "'repeatDown'", "'popstream'", 
		"'not'", "'in'", "'is'", "'::'", "'('", "')'", "'['", "']'", "'{'", "'}'", 
		"'<'", "'>'", "','", "';'", "':'", "'...'", "'.'", "'!'", "'?'", "'\"'", 
		"'''", "'`'", "'$'", "'>='", "'<='", "'<<'", "'>>'", "'<>'", "'~='", "'++'", 
		"'--'", "'+:'", "'-:'", "'->'", "'=>'", "':<'", "'='", "'&'", "'|'", "'~'", 
		"'^'", "'+'", "'-'", "'**'", "'*'", "'/'", "'%'", null, null, null, null, 
		null, null, null, "'\\r\\n'"
	};
	private static readonly string[] _SymbolicNames = {
		null, "THIS", "SWEETS", "RECIPE", "CANDY", "GUM", "FLAVOR", "FLAVORS", 
		"SUGAR", "CARB", "CAL", "KCAL", "YUM", "BOLD", "SUBTLE", "BLAND", "POP", 
		"SIZE", "EMPTY", "INPUT", "PURE", "STICKY", "PACK", "SUGARPACK", "CARBPACK", 
		"CALPACK", "KCALPACK", "YUMPACK", "YUP", "NOPE", "AND", "OR", "XOR", "XNOR", 
		"FLAVORLESS", "IF", "ELSE", "ELIF", "WHILE", "REPEAT_UP", "REPEAT_DOWN", 
		"POPSTREAM", "NOT", "IN", "IS", "ASSIGN", "LEFT_PAREN", "RIGHT_PAREN", 
		"LEFT_SQUARE_BRACKET", "RIGHT_SQUARE_BRACKET", "LEFT_CURLY_BRACKET", "RIGHT_CURLY_BRACKET", 
		"LEFT_ANGLE_BRACKET", "RIGHT_ANGLE_BRACKET", "COMMA", "SEMICOLON", "COLON", 
		"ELIPSES", "DOT", "PRINT", "DEBUG", "DOUBLE_QUOTE", "SINGLE_QUOTE", "BACK_TICK", 
		"IMMUTABLE", "GT_EQ", "LT_EQ", "LEFT_SHIFT", "RIGHT_SHIFT", "NOT_EQ_1", 
		"NOT_EQ_2", "PLUS_PLUS", "MINUS_MINUS", "PLUS_COLON", "MINUS_COLON", "THIN_ARROW", 
		"THICK_ARROW", "SUBCLASS_OF", "EQUALS", "AND_OP", "OR_OP", "NOT_OP", "XOR_OP", 
		"PLUS", "MINUS", "POWER", "MULTIPLY", "DIVIDE", "MODULO", "IDENTIFIER", 
		"LETTER", "INTEGER_LITERAL", "STRING_LITERAL", "CHAR_LITERAL", "ESCAPE_SEQUENCE", 
		"WHITE", "EOL", "SINGLE_LINE_COMMENT", "MULTI_LINE_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "BubblGum.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static BubblGumLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,98,637,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,
		7,70,2,71,7,71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,
		7,77,2,78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,
		7,84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,91,
		7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,97,1,0,1,
		0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,3,
		1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,
		6,1,6,1,6,1,6,1,6,1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,8,
		1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,12,1,12,
		1,12,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,
		1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,
		1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,19,1,19,
		1,20,1,20,1,20,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,21,1,21,1,22,1,22,
		1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,23,1,23,
		1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,
		1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,
		1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,
		1,30,1,30,1,31,1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,33,1,33,1,33,
		1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,3,33,404,8,33,1,
		34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,37,1,
		37,1,37,1,37,1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,
		39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,1,40,1,
		40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,
		43,1,43,1,43,1,44,1,44,1,44,1,45,1,45,1,46,1,46,1,47,1,47,1,48,1,48,1,
		49,1,49,1,50,1,50,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,1,55,1,55,1,
		56,1,56,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,1,61,1,
		62,1,62,1,63,1,63,1,64,1,64,1,64,1,65,1,65,1,65,1,66,1,66,1,66,1,67,1,
		67,1,67,1,68,1,68,1,68,1,69,1,69,1,69,1,70,1,70,1,70,1,71,1,71,1,71,1,
		72,1,72,1,72,1,73,1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,75,1,76,1,76,1,
		76,1,77,1,77,1,78,1,78,1,79,1,79,1,80,1,80,1,81,1,81,1,82,1,82,1,83,1,
		83,1,84,1,84,1,84,1,85,1,85,1,86,1,86,1,87,1,87,1,88,1,88,5,88,572,8,88,
		10,88,12,88,575,9,88,1,89,1,89,1,90,1,90,5,90,581,8,90,10,90,12,90,584,
		9,90,1,91,1,91,1,91,5,91,589,8,91,10,91,12,91,592,9,91,1,91,1,91,1,92,
		1,92,1,92,3,92,599,8,92,1,92,1,92,1,93,1,93,1,93,1,94,1,94,1,94,1,94,1,
		95,1,95,1,95,1,95,1,95,1,96,1,96,5,96,617,8,96,10,96,12,96,620,9,96,1,
		96,1,96,1,97,1,97,1,97,1,97,5,97,628,8,97,10,97,12,97,631,9,97,1,97,1,
		97,1,97,1,97,1,97,1,629,0,98,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,
		10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,
		22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,
		34,69,35,71,36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,
		46,93,47,95,48,97,49,99,50,101,51,103,52,105,53,107,54,109,55,111,56,113,
		57,115,58,117,59,119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,
		67,135,68,137,69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,
		77,155,78,157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,
		87,175,88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,
		97,195,98,1,0,9,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,97,122,2,
		0,65,90,97,122,1,0,48,57,2,0,34,34,92,92,2,0,39,39,92,92,8,0,34,34,39,
		39,92,92,98,98,102,102,110,110,114,114,116,116,3,0,9,10,13,13,32,32,2,
		0,10,10,13,13,644,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,
		1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
		0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
		1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,
		0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,
		1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
		0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
		1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,
		0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,
		1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,
		0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,
		0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,0,0,0,0,125,1,0,0,0,0,127,1,
		0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,
		0,0,0,0,139,1,0,0,0,0,141,1,0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,
		0,0,0,0,149,1,0,0,0,0,151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,
		0,0,0,0,159,1,0,0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,
		0,0,0,0,169,1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,
		0,0,0,0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,
		0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,1,197,1,
		0,0,0,3,201,1,0,0,0,5,208,1,0,0,0,7,215,1,0,0,0,9,221,1,0,0,0,11,225,1,
		0,0,0,13,232,1,0,0,0,15,240,1,0,0,0,17,246,1,0,0,0,19,251,1,0,0,0,21,255,
		1,0,0,0,23,260,1,0,0,0,25,264,1,0,0,0,27,269,1,0,0,0,29,276,1,0,0,0,31,
		282,1,0,0,0,33,286,1,0,0,0,35,291,1,0,0,0,37,297,1,0,0,0,39,303,1,0,0,
		0,41,308,1,0,0,0,43,315,1,0,0,0,45,320,1,0,0,0,47,330,1,0,0,0,49,339,1,
		0,0,0,51,347,1,0,0,0,53,356,1,0,0,0,55,364,1,0,0,0,57,368,1,0,0,0,59,373,
		1,0,0,0,61,377,1,0,0,0,63,380,1,0,0,0,65,384,1,0,0,0,67,403,1,0,0,0,69,
		405,1,0,0,0,71,408,1,0,0,0,73,413,1,0,0,0,75,418,1,0,0,0,77,424,1,0,0,
		0,79,433,1,0,0,0,81,444,1,0,0,0,83,454,1,0,0,0,85,458,1,0,0,0,87,461,1,
		0,0,0,89,464,1,0,0,0,91,467,1,0,0,0,93,469,1,0,0,0,95,471,1,0,0,0,97,473,
		1,0,0,0,99,475,1,0,0,0,101,477,1,0,0,0,103,479,1,0,0,0,105,481,1,0,0,0,
		107,483,1,0,0,0,109,485,1,0,0,0,111,487,1,0,0,0,113,489,1,0,0,0,115,493,
		1,0,0,0,117,495,1,0,0,0,119,497,1,0,0,0,121,499,1,0,0,0,123,501,1,0,0,
		0,125,503,1,0,0,0,127,505,1,0,0,0,129,507,1,0,0,0,131,510,1,0,0,0,133,
		513,1,0,0,0,135,516,1,0,0,0,137,519,1,0,0,0,139,522,1,0,0,0,141,525,1,
		0,0,0,143,528,1,0,0,0,145,531,1,0,0,0,147,534,1,0,0,0,149,537,1,0,0,0,
		151,540,1,0,0,0,153,543,1,0,0,0,155,546,1,0,0,0,157,548,1,0,0,0,159,550,
		1,0,0,0,161,552,1,0,0,0,163,554,1,0,0,0,165,556,1,0,0,0,167,558,1,0,0,
		0,169,560,1,0,0,0,171,563,1,0,0,0,173,565,1,0,0,0,175,567,1,0,0,0,177,
		569,1,0,0,0,179,576,1,0,0,0,181,578,1,0,0,0,183,585,1,0,0,0,185,595,1,
		0,0,0,187,602,1,0,0,0,189,605,1,0,0,0,191,609,1,0,0,0,193,614,1,0,0,0,
		195,623,1,0,0,0,197,198,5,103,0,0,198,199,5,117,0,0,199,200,5,109,0,0,
		200,2,1,0,0,0,201,202,5,115,0,0,202,203,5,119,0,0,203,204,5,101,0,0,204,
		205,5,101,0,0,205,206,5,116,0,0,206,207,5,115,0,0,207,4,1,0,0,0,208,209,
		5,114,0,0,209,210,5,101,0,0,210,211,5,99,0,0,211,212,5,105,0,0,212,213,
		5,112,0,0,213,214,5,101,0,0,214,6,1,0,0,0,215,216,5,99,0,0,216,217,5,97,
		0,0,217,218,5,110,0,0,218,219,5,100,0,0,219,220,5,121,0,0,220,8,1,0,0,
		0,221,222,5,71,0,0,222,223,5,117,0,0,223,224,5,109,0,0,224,10,1,0,0,0,
		225,226,5,102,0,0,226,227,5,108,0,0,227,228,5,97,0,0,228,229,5,118,0,0,
		229,230,5,111,0,0,230,231,5,114,0,0,231,12,1,0,0,0,232,233,5,102,0,0,233,
		234,5,108,0,0,234,235,5,97,0,0,235,236,5,118,0,0,236,237,5,111,0,0,237,
		238,5,114,0,0,238,239,5,115,0,0,239,14,1,0,0,0,240,241,5,115,0,0,241,242,
		5,117,0,0,242,243,5,103,0,0,243,244,5,97,0,0,244,245,5,114,0,0,245,16,
		1,0,0,0,246,247,5,99,0,0,247,248,5,97,0,0,248,249,5,114,0,0,249,250,5,
		98,0,0,250,18,1,0,0,0,251,252,5,99,0,0,252,253,5,97,0,0,253,254,5,108,
		0,0,254,20,1,0,0,0,255,256,5,107,0,0,256,257,5,99,0,0,257,258,5,97,0,0,
		258,259,5,108,0,0,259,22,1,0,0,0,260,261,5,121,0,0,261,262,5,117,0,0,262,
		263,5,109,0,0,263,24,1,0,0,0,264,265,5,98,0,0,265,266,5,111,0,0,266,267,
		5,108,0,0,267,268,5,100,0,0,268,26,1,0,0,0,269,270,5,115,0,0,270,271,5,
		117,0,0,271,272,5,98,0,0,272,273,5,116,0,0,273,274,5,108,0,0,274,275,5,
		101,0,0,275,28,1,0,0,0,276,277,5,98,0,0,277,278,5,108,0,0,278,279,5,97,
		0,0,279,280,5,110,0,0,280,281,5,100,0,0,281,30,1,0,0,0,282,283,5,112,0,
		0,283,284,5,111,0,0,284,285,5,112,0,0,285,32,1,0,0,0,286,287,5,115,0,0,
		287,288,5,105,0,0,288,289,5,122,0,0,289,290,5,101,0,0,290,34,1,0,0,0,291,
		292,5,101,0,0,292,293,5,109,0,0,293,294,5,112,0,0,294,295,5,116,0,0,295,
		296,5,121,0,0,296,36,1,0,0,0,297,298,5,105,0,0,298,299,5,110,0,0,299,300,
		5,112,0,0,300,301,5,117,0,0,301,302,5,116,0,0,302,38,1,0,0,0,303,304,5,
		112,0,0,304,305,5,117,0,0,305,306,5,114,0,0,306,307,5,101,0,0,307,40,1,
		0,0,0,308,309,5,115,0,0,309,310,5,116,0,0,310,311,5,105,0,0,311,312,5,
		99,0,0,312,313,5,107,0,0,313,314,5,121,0,0,314,42,1,0,0,0,315,316,5,112,
		0,0,316,317,5,97,0,0,317,318,5,99,0,0,318,319,5,107,0,0,319,44,1,0,0,0,
		320,321,5,115,0,0,321,322,5,117,0,0,322,323,5,103,0,0,323,324,5,97,0,0,
		324,325,5,114,0,0,325,326,5,112,0,0,326,327,5,97,0,0,327,328,5,99,0,0,
		328,329,5,107,0,0,329,46,1,0,0,0,330,331,5,99,0,0,331,332,5,97,0,0,332,
		333,5,114,0,0,333,334,5,98,0,0,334,335,5,112,0,0,335,336,5,97,0,0,336,
		337,5,99,0,0,337,338,5,107,0,0,338,48,1,0,0,0,339,340,5,99,0,0,340,341,
		5,97,0,0,341,342,5,108,0,0,342,343,5,112,0,0,343,344,5,97,0,0,344,345,
		5,99,0,0,345,346,5,107,0,0,346,50,1,0,0,0,347,348,5,107,0,0,348,349,5,
		99,0,0,349,350,5,97,0,0,350,351,5,108,0,0,351,352,5,112,0,0,352,353,5,
		97,0,0,353,354,5,99,0,0,354,355,5,107,0,0,355,52,1,0,0,0,356,357,5,121,
		0,0,357,358,5,117,0,0,358,359,5,109,0,0,359,360,5,112,0,0,360,361,5,97,
		0,0,361,362,5,99,0,0,362,363,5,107,0,0,363,54,1,0,0,0,364,365,5,121,0,
		0,365,366,5,117,0,0,366,367,5,112,0,0,367,56,1,0,0,0,368,369,5,110,0,0,
		369,370,5,111,0,0,370,371,5,112,0,0,371,372,5,101,0,0,372,58,1,0,0,0,373,
		374,5,97,0,0,374,375,5,110,0,0,375,376,5,100,0,0,376,60,1,0,0,0,377,378,
		5,111,0,0,378,379,5,114,0,0,379,62,1,0,0,0,380,381,5,120,0,0,381,382,5,
		111,0,0,382,383,5,114,0,0,383,64,1,0,0,0,384,385,5,120,0,0,385,386,5,110,
		0,0,386,387,5,111,0,0,387,388,5,114,0,0,388,66,1,0,0,0,389,390,5,102,0,
		0,390,391,5,108,0,0,391,392,5,97,0,0,392,393,5,118,0,0,393,394,5,111,0,
		0,394,395,5,114,0,0,395,396,5,108,0,0,396,397,5,101,0,0,397,398,5,115,
		0,0,398,404,5,115,0,0,399,400,5,110,0,0,400,401,5,102,0,0,401,402,5,108,
		0,0,402,404,5,118,0,0,403,389,1,0,0,0,403,399,1,0,0,0,404,68,1,0,0,0,405,
		406,5,105,0,0,406,407,5,102,0,0,407,70,1,0,0,0,408,409,5,101,0,0,409,410,
		5,108,0,0,410,411,5,115,0,0,411,412,5,101,0,0,412,72,1,0,0,0,413,414,5,
		101,0,0,414,415,5,108,0,0,415,416,5,105,0,0,416,417,5,102,0,0,417,74,1,
		0,0,0,418,419,5,119,0,0,419,420,5,104,0,0,420,421,5,105,0,0,421,422,5,
		108,0,0,422,423,5,101,0,0,423,76,1,0,0,0,424,425,5,114,0,0,425,426,5,101,
		0,0,426,427,5,112,0,0,427,428,5,101,0,0,428,429,5,97,0,0,429,430,5,116,
		0,0,430,431,5,85,0,0,431,432,5,112,0,0,432,78,1,0,0,0,433,434,5,114,0,
		0,434,435,5,101,0,0,435,436,5,112,0,0,436,437,5,101,0,0,437,438,5,97,0,
		0,438,439,5,116,0,0,439,440,5,68,0,0,440,441,5,111,0,0,441,442,5,119,0,
		0,442,443,5,110,0,0,443,80,1,0,0,0,444,445,5,112,0,0,445,446,5,111,0,0,
		446,447,5,112,0,0,447,448,5,115,0,0,448,449,5,116,0,0,449,450,5,114,0,
		0,450,451,5,101,0,0,451,452,5,97,0,0,452,453,5,109,0,0,453,82,1,0,0,0,
		454,455,5,110,0,0,455,456,5,111,0,0,456,457,5,116,0,0,457,84,1,0,0,0,458,
		459,5,105,0,0,459,460,5,110,0,0,460,86,1,0,0,0,461,462,5,105,0,0,462,463,
		5,115,0,0,463,88,1,0,0,0,464,465,5,58,0,0,465,466,5,58,0,0,466,90,1,0,
		0,0,467,468,5,40,0,0,468,92,1,0,0,0,469,470,5,41,0,0,470,94,1,0,0,0,471,
		472,5,91,0,0,472,96,1,0,0,0,473,474,5,93,0,0,474,98,1,0,0,0,475,476,5,
		123,0,0,476,100,1,0,0,0,477,478,5,125,0,0,478,102,1,0,0,0,479,480,5,60,
		0,0,480,104,1,0,0,0,481,482,5,62,0,0,482,106,1,0,0,0,483,484,5,44,0,0,
		484,108,1,0,0,0,485,486,5,59,0,0,486,110,1,0,0,0,487,488,5,58,0,0,488,
		112,1,0,0,0,489,490,5,46,0,0,490,491,5,46,0,0,491,492,5,46,0,0,492,114,
		1,0,0,0,493,494,5,46,0,0,494,116,1,0,0,0,495,496,5,33,0,0,496,118,1,0,
		0,0,497,498,5,63,0,0,498,120,1,0,0,0,499,500,5,34,0,0,500,122,1,0,0,0,
		501,502,5,39,0,0,502,124,1,0,0,0,503,504,5,96,0,0,504,126,1,0,0,0,505,
		506,5,36,0,0,506,128,1,0,0,0,507,508,5,62,0,0,508,509,5,61,0,0,509,130,
		1,0,0,0,510,511,5,60,0,0,511,512,5,61,0,0,512,132,1,0,0,0,513,514,5,60,
		0,0,514,515,5,60,0,0,515,134,1,0,0,0,516,517,5,62,0,0,517,518,5,62,0,0,
		518,136,1,0,0,0,519,520,5,60,0,0,520,521,5,62,0,0,521,138,1,0,0,0,522,
		523,5,126,0,0,523,524,5,61,0,0,524,140,1,0,0,0,525,526,5,43,0,0,526,527,
		5,43,0,0,527,142,1,0,0,0,528,529,5,45,0,0,529,530,5,45,0,0,530,144,1,0,
		0,0,531,532,5,43,0,0,532,533,5,58,0,0,533,146,1,0,0,0,534,535,5,45,0,0,
		535,536,5,58,0,0,536,148,1,0,0,0,537,538,5,45,0,0,538,539,5,62,0,0,539,
		150,1,0,0,0,540,541,5,61,0,0,541,542,5,62,0,0,542,152,1,0,0,0,543,544,
		5,58,0,0,544,545,5,60,0,0,545,154,1,0,0,0,546,547,5,61,0,0,547,156,1,0,
		0,0,548,549,5,38,0,0,549,158,1,0,0,0,550,551,5,124,0,0,551,160,1,0,0,0,
		552,553,5,126,0,0,553,162,1,0,0,0,554,555,5,94,0,0,555,164,1,0,0,0,556,
		557,5,43,0,0,557,166,1,0,0,0,558,559,5,45,0,0,559,168,1,0,0,0,560,561,
		5,42,0,0,561,562,5,42,0,0,562,170,1,0,0,0,563,564,5,42,0,0,564,172,1,0,
		0,0,565,566,5,47,0,0,566,174,1,0,0,0,567,568,5,37,0,0,568,176,1,0,0,0,
		569,573,7,0,0,0,570,572,7,1,0,0,571,570,1,0,0,0,572,575,1,0,0,0,573,571,
		1,0,0,0,573,574,1,0,0,0,574,178,1,0,0,0,575,573,1,0,0,0,576,577,7,2,0,
		0,577,180,1,0,0,0,578,582,7,3,0,0,579,581,7,3,0,0,580,579,1,0,0,0,581,
		584,1,0,0,0,582,580,1,0,0,0,582,583,1,0,0,0,583,182,1,0,0,0,584,582,1,
		0,0,0,585,590,3,121,60,0,586,589,3,187,93,0,587,589,8,4,0,0,588,586,1,
		0,0,0,588,587,1,0,0,0,589,592,1,0,0,0,590,588,1,0,0,0,590,591,1,0,0,0,
		591,593,1,0,0,0,592,590,1,0,0,0,593,594,3,121,60,0,594,184,1,0,0,0,595,
		598,3,123,61,0,596,599,3,187,93,0,597,599,8,5,0,0,598,596,1,0,0,0,598,
		597,1,0,0,0,599,600,1,0,0,0,600,601,3,123,61,0,601,186,1,0,0,0,602,603,
		5,92,0,0,603,604,7,6,0,0,604,188,1,0,0,0,605,606,7,7,0,0,606,607,1,0,0,
		0,607,608,6,94,0,0,608,190,1,0,0,0,609,610,5,13,0,0,610,611,5,10,0,0,611,
		612,1,0,0,0,612,613,6,95,0,0,613,192,1,0,0,0,614,618,5,35,0,0,615,617,
		8,8,0,0,616,615,1,0,0,0,617,620,1,0,0,0,618,616,1,0,0,0,618,619,1,0,0,
		0,619,621,1,0,0,0,620,618,1,0,0,0,621,622,6,96,0,0,622,194,1,0,0,0,623,
		624,5,35,0,0,624,625,5,62,0,0,625,629,1,0,0,0,626,628,9,0,0,0,627,626,
		1,0,0,0,628,631,1,0,0,0,629,630,1,0,0,0,629,627,1,0,0,0,630,632,1,0,0,
		0,631,629,1,0,0,0,632,633,5,60,0,0,633,634,5,35,0,0,634,635,1,0,0,0,635,
		636,6,97,0,0,636,196,1,0,0,0,9,0,403,573,582,588,590,598,618,629,1,0,1,
		0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
