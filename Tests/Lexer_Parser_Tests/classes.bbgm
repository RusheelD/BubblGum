sugar a, sugar b :: 3
$kcal a, sugar b, $kcal d :: 2
sugar a, kcal d
recipe: Eat ($sugar a) bob {
    
}

Gum Apple: Fruit, Edible, Product {
	sticky bold sugar weight :: 1!
	sticky bold $kcal name :: "Apple"
	
	bold Color color :: Color->RED !
	bold Taste taste :: Taste-> SWEET !
	bold yum eaten :: nope 

	bold recipe: eat() {
		eaten :: yup
	}
}

sticky Gum FruitManager {
	sticky bold Apple Apple :: Apple()
	sticky bold Banana Banana :: Banana()
	sticky bold Strawberry Strawberry :: Strawberry()
	sticky bold $sugar FruitCount :: 3
}

Gum Point2D {
	bold carb x!
	bold carb y!
	
	bold recipe: Point2D(carb x, carb y) {
		gum->x :: x
		gum->y :: y
	}

	bold recipe: Distance(Point2D point) carb:
		pop (((gum->x - point->x)**(2) + (gum->y - point->y)**(2))**(1/2))
}

Gum Line2D {
	bold Point2D point1 :: flavorless
	bold Point2D point2 :: flavorless

	bold recipe: Line2D(carb x1, carb x2, carb y1, carb y2) {
		point1 :: Point2D(x1, y1)
		point2 :: Point2D(x2, y2)
	}

	bold recipe: Length() carb:
		pop point1->Distance(point2)

	bold recipe: Slope() carb:
		pop (point1->y - point2->y) / (point1->x - point2->x)

	bold recipe: Points() <Point2D, Point2D> {
		pop point1
		pop point2
	}
}